I"ö<h1 id="managing-docker-containers">Managing Docker containers</h1>

<h2 id="tested-infrastructure">Tested Infrastructure</h2>

<table class="tg">
  <tr>
    <th class="tg-yw4l"><b>Platform</b></th>
    <th class="tg-yw4l"><b>Number of Instance</b></th>
    <th class="tg-yw4l"><b>Reading Time</b></th>
    
  </tr>
  <tr>
    <td class="tg-yw4l"><b> Play with Docker</b></td>
    <td class="tg-yw4l"><b>1</b></td>
    <td class="tg-yw4l"><b>5 min</b></td>
    
  </tr>
  
</table>

<h2 id="pre-requisite">Pre-requisite</h2>

<ul>
  <li>Create an account with <a href="https://hub.docker.com">DockerHub</a></li>
  <li>Open <a href="https://labs.play-with-docker.com/">PWD</a> Platform on your browser</li>
  <li>Click on <strong>Add New Instance</strong> on the left side of the screen to bring up Alpine OS instance on the right side</li>
</ul>

<h2 id="preparations">Preparations</h2>

<ul>
  <li>Clean your docker host using the commands (in bash):</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker rm -f $(docker ps -a -q)
</code></pre></div></div>

<h2 id="instructions">Instructions</h2>

<ul>
  <li>Run the following containers from the dockerhub:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker run -d -p 5000:5000 --name app1 selaworkshops/python-app:1.0
</code></pre></div>    </div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker run -d -p 5001:5001 -e "port=5001" --name app2 selaworkshops/python-app:2.0
</code></pre></div>    </div>
  </li>
  <li>Ensure the containers are running:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker ps
</code></pre></div>    </div>
  </li>
  <li>Stop the first container:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker stop app1
</code></pre></div>    </div>
  </li>
  <li>Kill the second container:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker kill app2
</code></pre></div>    </div>
  </li>
  <li>Display running containers:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker ps
</code></pre></div>    </div>
  </li>
  <li>Show all the containers (includind non running containers):
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker ps -a
</code></pre></div>    </div>
  </li>
  <li>Letâ€™s start both containers again:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker start app1 app2
</code></pre></div>    </div>
  </li>
  <li>Restart the second container:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker restart app2
</code></pre></div>    </div>
  </li>
  <li>Display the docker host information with:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker info
</code></pre></div>    </div>
  </li>
  <li>Show the running processes in the first container using:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker top app1
</code></pre></div>    </div>
  </li>
  <li>Retrieve the history of the second container:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker history selaworkshops/python-app:2.0
</code></pre></div>    </div>
  </li>
  <li>Inspect the second container image:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker inspect selaworkshops/python-app:2.0
</code></pre></div>    </div>
  </li>
  <li>Inspect the first container and look for the internal ip:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker inspect app1
</code></pre></div>    </div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"Networks": {
             "bridge": {
                 "IPAMConfig": null,
                 "Links": null,
                 "Aliases": null,
                 "NetworkID": "822cb66790c6358d9decab874916120f3bdeff7193a4375c94ca54d50832303d",
                 "EndpointID": "9aa96dc29be08eddc6d8f429ebecd2285c064fda288681a3611812413cbdfc1f",
                 "Gateway": "172.17.0.1",
                 "IPAddress": "172.17.0.3",
                 "IPPrefixLen": 16,
                 "IPv6Gateway": "",
                 "GlobalIPv6Address": "",
                 "GlobalIPv6PrefixLen": 0,
                 "MacAddress": "02:42:ac:11:00:03",
                 "DriverOpts": null
             }
         }
</code></pre></div>    </div>
  </li>
  <li>Show the logs of the second container using the flag â€“follow:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ docker logs --follow app2
</code></pre></div>    </div>
  </li>
  <li>Browse to the application and see the containers logs from the terminal:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://localhost:5001
</code></pre></div>    </div>
  </li>
  <li>Stop to tracking logs:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ CTRL + C
</code></pre></div>    </div>
    <p>Proceed Â» <a href="https://dockerlabs.collabnix.com/beginners/dockerfile/Writing-dockerfile.html#what-is-a-dockerfile">What is Dockerfile</a></p>
  </li>
</ul>
:ET