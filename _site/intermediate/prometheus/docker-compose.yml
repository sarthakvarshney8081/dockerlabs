version: '3'

networks:
  monitor-net:
    driver: overlay

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.role == manager
      resources:
        limits:
          memory: 500M
      restart_policy:
        condition: any
    ports:
      - "9090:9090"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"


  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.role == manager
      resources:
        limits:
          memory: 250M
      restart_policy:
        condition: any
    ports:
      - "9093:9093"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"


  nodeexporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    deploy:
      mode: global
      resources:
        limits:
          memory: 250M
      restart_policy:
        condition: any
    ports:
      - "9100:9100"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 250M
      restart_policy:
        condition: any
    ports:
      - "8080:8080"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.role == manager
      resources:
        limits:
          memory: 250M
      restart_policy:
        condition: any
    ports:
      - "8000:3000"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
